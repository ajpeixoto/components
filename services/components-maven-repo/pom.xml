<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.talend.components</groupId>
        <artifactId>components-parent</artifactId>
        <version>0.28.33-SNAPSHOT</version>
        <relativePath>../../components-parent/pom.xml</relativePath>
    </parent>

    <artifactId>components-maven-repo</artifactId>
    <packaging>pom</packaging>
    <name>Maven repository with components for REST service</name>

    <properties>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- JDBC drivers versions -->
        <mariadb.driver.version>2.5.3</mariadb.driver.version>
        <postgresql.driver.version>42.7.1</postgresql.driver.version>
        <jtds.driver.version>1.3.1</jtds.driver.version>
        <derby.driver.version>10.12.1.1</derby.driver.version>
        <snowflake.driver.version>3.13.30</snowflake.driver.version>
        <redshift.driver.version>1.2.37.1061</redshift.driver.version>
        <redshift.aws.driver.exts.version>1.12.264</redshift.aws.driver.exts.version>
        <!-- Dependencies version -->
        <winutils.version>2.7.1</winutils.version>
        <!-- Used for Docker images name -->
        <git_branch>local</git_branch>
        <talend_docker_registry>registry.datapwn.com</talend_docker_registry>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.talend.components</groupId>
                <artifactId>components-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>components-jdbc-runtime</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>components-jdbc-runtime-beam</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>components-salesforce-runtime</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>components-azure-dls-gen2-blob</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>simplefileio-runtime</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.talend.components</groupId>
            <artifactId>s3-runtime-di</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
        </dependency>
        
        <!-- add them to .m2 to avoid warn when component server start -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--redshift jdbc dependencies-->
        <dependency>
            <groupId>com.amazon.redshift</groupId>
            <artifactId>redshift-jdbc42-no-awssdk</artifactId>
            <version>${redshift.driver.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-redshift</artifactId>
            <version>${redshift.aws.driver.exts.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-sts</artifactId>
            <version>${redshift.aws.driver.exts.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


    </dependencies>

    <repositories>
        <repository>
            <id>apache.snapshots</id>
            <name>Apache Development Snapshot Repository</name>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- used to download hadoop-winutils dependency -->
        <repository>
            <id>mapr-releases-repository-proxy</id>
            <url>https://artifacts-zl.talend.com/nexus/content/repositories/mapr_public/</url>
        </repository>
        <!-- THIS REPOSITORY SEEMS DOWN - The artifacts it contained which we need seem to be present in the proxy of redshit repo
        <repository>
            <id>redshift</id>
            <url>https://redshift-maven-repository.s3-website-us-east-1.amazonaws.com/release</url>
        </repository>
        -->
        <repository>
            <id>redshift-proxy</id>
            <url>https://artifacts-zl.talend.com/nexus/content/repositories/redshift</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>sonatype-public-repository</id>
            <url>https://oss.sonatype.org/content/groups/public</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <!-- import winutils binaries for hadoop -->
                                <artifactItem>
                                    <groupId>org.apache.hadoop</groupId>
                                    <artifactId>hadoop-winutils</artifactId>
                                    <version>${winutils.version}</version>
                                    <type>zip</type>
                                    <outputDirectory>${project.build.directory}/binaries/hadoop/bin</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- this will create the maven repository for the application runtime
                    resolution -->
                <!-- you must specify the runtime artifacts if they are not part of dependencies
                    of this pom. -->
                <artifactId>maven-invoker-plugin</artifactId>
                <version>2.0.1-TALEND</version>
                <configuration>
                    <localRepositoryPath>target/mvn-repo</localRepositoryPath>
                    <skipTestScopeForExtraArtifacts>true</skipTestScopeForExtraArtifacts>
                    <projectsDirectory>src/it</projectsDirectory>
                    <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
                    <onlyResolveDependencies>true</onlyResolveDependencies>
                    <pomIncludes>
                        <pomInclude>*/pom.xml</pomInclude>
                    </pomIncludes>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-components-maven-repo</id>
                        <phase>package</phase>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <configuration>
                            <extraArtifacts>
                                <!-- JDBC drivers -->
                                <extraArtifact>org.apache.derby:derbyclient:${derby.driver.version}:jar</extraArtifact>
                                <extraArtifact>org.mariadb.jdbc:mariadb-java-client:${mariadb.driver.version}:jar
                                </extraArtifact>
                                <extraArtifact>org.postgresql:postgresql:${postgresql.driver.version}:jar
                                </extraArtifact>
                                <extraArtifact>net.sourceforge.jtds:jtds:${jtds.driver.version}:jar</extraArtifact>
                                <extraArtifact>net.snowflake:snowflake-jdbc:${snowflake.driver.version}:jar
                                </extraArtifact>

                                <!-- HttpClient5 -->
                                <extraArtifact>org.apache.httpcomponents.client5:httpclient5:5.1.3:jar</extraArtifact>
                                <extraArtifact>org.apache.httpcomponents.core5:httpcore5:5.1.3:jar</extraArtifact>
                                <extraArtifact>org.apache.httpcomponents.client5:httpclient5:5.2:jar</extraArtifact>
                                <extraArtifact>org.apache.httpcomponents.core5:httpcore5:5.2:jar</extraArtifact>

                                <!-- Netty-->
                                <extraArtifact>io.netty:netty:3.10.6.Final:jar</extraArtifact>

                                <!--
                                    redshift jdbc have 3 aws jars dependencies, that will introduce CVE jars, so use pom dependencies way instead here
                                -->
                            </extraArtifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- JDBC drivers -->
            <!-- Download and install drivers that are not available from a nexus repo-->
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>
                                https://s3.amazonaws.com/athena-downloads/drivers/JDBC/SimbaAthenaJDBC-2.1.1.1000/AthenaJDBC42-2.1.1.1000.jar
                            </url>
                            <outputFileName>AthenaJDBC42-2.1.1.1000.jar</outputFileName>
                            <outputDirectory>${project.build.directory}/mvn-repo/Athena/AthenaJDBC42/2.1.1.1000/
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>no-arch-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/no-arch.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>config-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/config.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.veithen.alta</groupId>
                <artifactId>alta-maven-plugin</artifactId>
                <version>0.5.3-TALEND</version>
                <executions>
                    <!-- generates components list to be used in tcomp service and stores it in components.list property -->
                    <execution>
                        <id>generate-components-list</id>
                        <goals>
                            <goal>generate-properties</goal>
                        </goals>
                        <configuration>
                            <name>components.list</name>
                            <value>mvn:%groupId%/%artifactId%/%baseVersion%/%type%%classifier?/@:%</value>
                            <separator>,</separator>
                            <artifacts>
                                <artifact>
                                    <groupId>org.talend.components</groupId>
                                    <artifactId>components-jdbc-definition</artifactId>
                                    <version>${project.version}</version>
                                </artifact>
                                <artifact>
                                    <groupId>org.talend.components</groupId>
                                    <artifactId>components-salesforce-definition</artifactId>
                                    <version>${project.version}</version>
                                </artifact>
                                <artifact>
                                    <groupId>org.talend.components</groupId>
                                    <artifactId>components-azure-dls-gen2-blob</artifactId>
                                    <version>${project.version}</version>
                                </artifact>
                                <artifact>
                                    <groupId>org.talend.components</groupId>
                                    <artifactId>simplefileio-definition</artifactId>
                                    <version>${project.version}</version>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <!-- creates components.list file with components mvn urls to be used by the service -->
                    <!-- depends on alta-maven-plugin and generate-components-list goal -->
                    <execution>
                        <id>generate-components.list</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <exportAntProperties>true</exportAntProperties>
                            <tasks>
                                <echo message="tcomp.components.list=${components.list}"/>
                                <echo
                                    file="${project.build.directory}${file.separator}config${file.separator}components.list"
                                    message="tcomp.components.list=${components.list}"/>
                            </tasks>
                        </configuration>
                    </execution>

                </executions>
            </plugin>
        </plugins>
    </build>
</project>
